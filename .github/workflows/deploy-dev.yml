name: Deploy Dev

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  STACK_NAME: discra-api-dev
  TEMPLATE_PATH: template.yaml

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo tree & template snippet
        run: |
          pwd
          ls -la
          echo "----- template.yaml (first 80 lines) -----"
          sed -n '1,80p' template.yaml

      - name: Detect BOM in template.yaml (must be UTF-8 without BOM)
        shell: bash
        run: |
          bytes=$(head -c 3 template.yaml | od -An -t u1 | tr -d ' ')
          if [ "$bytes" = "239187191" ]; then
            echo "❌ template.yaml has a UTF-8 BOM; CloudFormation will treat AWSTemplateFormatVersion as \ufeffAWSTemplateFormatVersion and fail."
            exit 1
          fi
          echo "✅ No BOM detected."

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Pre-build with Maven
        run: |
          mvn -B -DskipTests package
          echo "=== target contents ==="
          ls -la target || true
          echo "=== handler classes in jar ==="
          for j in target/*.jar; do
            echo ">> $j"
            jar tf "$j" | grep -E 'com/discra/api/(HealthHandler|VersionHandler|AdminPingHandler)\.class' || true
          done

      - name: Install AWS SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: SAM version
        run: sam --version

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::422814825143:role/GitHubActions-Discra-Deploy-Dev
          aws-region: us-east-1
          role-session-name: discra-deploy-dev

      - name: Who am I?
        run: aws sts get-caller-identity

      - name: SAM validate
        run: sam validate --lint -t "$TEMPLATE_PATH"

      - name: SAM build (no cache)
        run: sam build -t "$TEMPLATE_PATH" --no-cached
      
      - name: Show SAM build outputs
        run: |
          echo "=== .aws-sam/build tree ==="
          find .aws-sam/build -maxdepth 3 -type d -print || true
          echo "=== JARs found ==="
          find .aws-sam/build -type f -name '*.jar' -print || true

      - name: Verify handler classes present in SAM-built jars
        run: |
          set -euo pipefail
          JARS=$(find .aws-sam/build -type f -name '*.jar' || true)
          if [ -z "$JARS" ]; then
           echo "❌ No jars produced by SAM build. Check the Maven step and SAM --debug logs above."
           exit 1
          fi
          echo "$JARS" | sed 's/^/  /'
          need_health=1; need_version=1; need_admin=1
          for j in $JARS; do
           jar tf "$j" | grep -q 'com/discra/api/HealthHandler.class'  && need_health=0
           jar tf "$j" | grep -q 'com/discra/api/VersionHandler.class' && need_version=0
           jar tf "$j" | grep -q 'com/discra/api/AdminPingHandler.class' && need_admin=0
          done
          [ $need_health  -eq 0 ] || { echo '❌ Missing HealthHandler.class';  exit 1; }
          [ $need_version -eq 0 ] || { echo '❌ Missing VersionHandler.class'; exit 1; }
          [ $need_admin   -eq 0 ] || { echo '❌ Missing AdminPingHandler.class'; exit 1; }
          echo "✅ Handler classes found."

      - name: Deploy (SAM)
        run: |
          sam deploy \
            -t "$TEMPLATE_PATH" \
            --stack-name "$STACK_NAME" \
            --region "$AWS_REGION" \
            --capabilities CAPABILITY_IAM \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --resolve-s3



