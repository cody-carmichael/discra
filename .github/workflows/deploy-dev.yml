name: Deploy Dev

on:
  push:
    branches: [main]
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: us-east-1
  STACK_NAME: discra-api-dev
  TEMPLATE_PATH: template.yaml

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show repo tree & template snippet
        run: |
          pwd
          ls -la
          echo "----- template.yaml (first 80 lines) -----"
          sed -n '1,80p' template.yaml

      - name: Detect BOM in template.yaml (must be UTF-8 without BOM)
        shell: bash
        run: |
          bytes=$(head -c 3 template.yaml | od -An -t u1 | tr -d ' ')
          if [ "$bytes" = "239187191" ]; then
            echo "❌ template.yaml has a UTF-8 BOM; CloudFormation will treat AWSTemplateFormatVersion as \ufeffAWSTemplateFormatVersion and fail."
            exit 1
          fi
          echo "✅ No BOM detected."

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Install AWS SAM CLI
        uses: aws-actions/setup-sam@v2

      - name: SAM version
        run: sam --version

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::422814825143:role/GitHubActions-Discra-Deploy-Dev
          aws-region: us-east-1
          role-session-name: discra-deploy-dev

      - name: Who am I?
        run: aws sts get-caller-identity

      - name: SAM validate
        run: sam validate --lint -t "$TEMPLATE_PATH"

      - name: SAM build (no cache)
        run: sam build -t "$TEMPLATE_PATH" --no-cached

      - name: Show SAM build outputs
        run: |
          echo "=== .aws-sam/build tree ==="
          find .aws-sam/build -maxdepth 3 -type d -print || true
          echo "=== JARs found ==="
          find .aws-sam/build -type f -name '*.jar' -print || true

      - name: Verify handlers exist in SAM build
        shell: bash
        run: |
          set -euo pipefail

          echo "=== Build tree (top levels) ==="
          find .aws-sam/build -maxdepth 4 -type d -print || true

          # helper to search for a class either as a loose .class under classes/
          # or packaged inside any jar under the function build dir
          have_class () {
            local classpath="$1"   # e.g., com/discra/api/HealthHandler.class
            # 1) look for loose class
            if find .aws-sam/build -type f -path "*/${classpath}" | grep -q . ; then
              return 0
            fi
            # 2) look inside any jars
            local jars
            jars=$(find .aws-sam/build -type f -name '*.jar' || true)
            if [ -n "$jars" ]; then
              for j in $jars; do
                if jar tf "$j" | grep -q "^${classpath}$" ; then
                  return 0
                fi
              done
            fi
            return 1
          }

          for C in HealthHandler VersionHandler AdminPingHandler; do
            CP="com/discra/api/${C}.class"
            if have_class "$CP"; then
              echo "✅ Found $CP"
            else
              echo "❌ Missing $CP in SAM build output"
              exit 1
            fi
          done

      - name: Deploy (SAM)
        run: |
          sam deploy \
            -t "$TEMPLATE_PATH" \
            --stack-name "$STACK_NAME" \
            --region "$AWS_REGION" \
            --capabilities CAPABILITY_IAM \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --resolve-s3



